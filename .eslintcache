[{"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\index.js":"1","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\App.js":"2","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\AllQuotes.js":"3","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\NewQuote.js":"4","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\QuoteDetail.js":"5","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\Comments.js":"6","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\NewCommentForm.js":"7","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\layout\\Layout.js":"8","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\layout\\MainNavigation.js":"9","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteList.js":"10","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteItem.js":"11","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteForm.js":"12","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\UI\\Card.js":"13","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\UI\\LoadingSpinner.js":"14","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\HighlightedQuote.js":"15","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\NotFound.js":"16","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\hooks\\hooks\\use-http.js":"17","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\lib\\lib\\api.js":"18","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\NoQuotesFound.js":"19","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentsList.js":"20","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentItem.js":"21"},{"size":222,"mtime":1641646020664,"results":"22","hashOfConfig":"23"},{"size":777,"mtime":1641738189296,"results":"24","hashOfConfig":"23"},{"size":1140,"mtime":1641685658717,"results":"25","hashOfConfig":"23"},{"size":725,"mtime":1641684784148,"results":"26","hashOfConfig":"23"},{"size":1815,"mtime":1641686805404,"results":"27","hashOfConfig":"23"},{"size":1763,"mtime":1641691734199,"results":"28","hashOfConfig":"23"},{"size":1334,"mtime":1641691357021,"results":"29","hashOfConfig":"23"},{"size":347,"mtime":1641652052534,"results":"30","hashOfConfig":"23"},{"size":765,"mtime":1641651709719,"results":"31","hashOfConfig":"23"},{"size":1415,"mtime":1641679890261,"results":"32","hashOfConfig":"23"},{"size":484,"mtime":1641683881081,"results":"33","hashOfConfig":"23"},{"size":1827,"mtime":1641661914151,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1641644817882,"results":"35","hashOfConfig":"23"},{"size":167,"mtime":1641644817768,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1641644818416,"results":"37","hashOfConfig":"23"},{"size":191,"mtime":1641658821519,"results":"38","hashOfConfig":"23"},{"size":1212,"mtime":1641681195535,"results":"39","hashOfConfig":"23"},{"size":2158,"mtime":1641682852786,"results":"40","hashOfConfig":"23"},{"size":333,"mtime":1641685848333,"results":"41","hashOfConfig":"23"},{"size":341,"mtime":1641691544142,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1641691557178,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"122vo1v",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\index.js",[],["91","92"],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\App.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\AllQuotes.js",["93"],"import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/hooks/use-http'\r\nimport { getAllQuotes } from '../lib/lib/api';\r\n\r\n\r\nconst DUMMY_QUOTES = [\r\n    { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n    { id: 'q2', author: 'Maximilian', text: 'Learning React is fun!' }\r\n]\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true)\r\n    useEffect(() => {\r\n        sendRequest();\r\n\r\n    }, [sendRequest])\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"centered focused\">{error}</p>\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />\r\n    }\r\n\r\n    return <QuoteList quotes={loadedQuotes} />\r\n\r\n}\r\n\r\nexport default AllQuotes\r\n\r\n","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\NewQuote.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\QuoteDetail.js",["94"],"import { Fragment, useEffect } from 'react'\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom'\r\nimport Comments from '../components/comments/Comments'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport useHttp from '../hooks/hooks/use-http'\r\nimport { getSingleQuote } from '../lib/lib/api'\r\n\r\nconst DUMMY_QUOTES = [\r\n    { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n    { id: 'q2', author: 'Maximilian', text: 'Learning React is fun!' }\r\n]\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch()\r\n    const params = useParams()\r\n    const { quoteId } = params;\r\n\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true)\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId])\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n    if (error) {\r\n        return <p className=\"centered focused\">{error}</p>\r\n    }\r\n    if (!loadedQuote) {\r\n        return <p>No quote found!</p>\r\n    }\r\n\r\n\r\n    //const quote = DUMMY_QUOTES.find((quote => quote.id === params.quoteId))\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            <Route path={match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`${match.url}/comments`}>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default QuoteDetail","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\Comments.js",["95"],"import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/hooks/use-http'\nimport { getAllComments } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport CommentsList from './CommentsList'\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [params])\n\n\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  let comments;\n\n  if (status === 'pending') {\n    comments =\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n  }\n\n  if (status === 'completed' && (loadedComments || loadedComments.length > 0)) {\n    console.log(loadedComments)\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className=\"centered\"> No comments were added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler} />}\n      <p>{comments}</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\NewCommentForm.js",["96"],"import { useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport useHttp from '../../hooks/hooks/use-http'\nimport { addComment } from '../../lib/lib/api'\n\nimport classes from './NewCommentForm.module.css';\n\n\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const params = useParams();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { commentData: enteredText }, quoteId: props.quoteId });\n\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\layout\\Layout.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\layout\\MainNavigation.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteList.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteItem.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\QuoteForm.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\UI\\Card.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\UI\\LoadingSpinner.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\HighlightedQuote.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\pages\\NotFound.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\hooks\\hooks\\use-http.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\lib\\lib\\api.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\quotes\\NoQuotesFound.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentsList.js",[],"C:\\Users\\c.gokce\\Desktop\\reactRouter\\09-time-to-practice-starting-code\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":9,"column":7,"nodeType":"103","messageId":"104","endLine":9,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":9,"column":7,"nodeType":"103","messageId":"104","endLine":9,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":22,"column":6,"nodeType":"107","endLine":22,"endColumn":14,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":13,"column":9,"nodeType":"103","messageId":"104","endLine":13,"endColumn":15},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'DUMMY_QUOTES' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'quoteId' and 'sendRequest'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'params' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [params, quoteId, sendRequest]",{"range":"115","text":"116"},[680,688],"[params, quoteId, sendRequest]"]